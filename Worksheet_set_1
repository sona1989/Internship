# Internship
Flip Robo worksheet 1 
 
PYTHON WORKSHEET 1 

Python worksheet 1 

1. C - % ans 
2. B. 0  ans
3. 6<<2  = 24 ans
4. 6&2   - 2 ANS
     6 - 110
     2-  010
     ‐----------
     010 - 2 ans 

5. 6|2 - 110 - 6 ans 
6.  C ans
7. A 
8. C in defining a generator 
9. A and C 
10. A and B

11. To find factorial of number 

# Python program to find the factorial of a number provided by the user.

 # change the value for a different result num = 7

 # To take input from the user 
num = int(input("Enter a number: "))
 factorial = 1

 # check if the number is negative, positive or zero

 if num < 0: 
    print("Sorry, factorial does not exist for negative numbers")

 elif num == 0:
    print("The factorial of 0 is 1")

 else: 
        for i in range(1,num + 1):
        factorial = factorial*i
 print("The factorial of",num,"is",factorial)

Using recursion

def recur_factorial(x): 
            if x == 1:
                 return 1
           else: 
                return (x * recur_factorial(x - 1))

 num = int(input("Enter number: ")) 
print("The factorial of", num, "is", recur_factorial(num))


‐--------------------------------------------------
12. PRIME OR NOT PRIME PROGRAM 

 #Program :

num = int(input("Enter any number : "))

 if num > 1:
           for i in range(2, num): 
            if (num % i) == 0:
 print(num, "is NOT a prime number")
             break
           else:
 print(num, "is a PRIME number") 
           elif num == 0 or 1: 
print(num, "is a neither prime NOR composite number") 
           else: 
print(num, "is NOT a prime number it is a COMPOSITE number")

---------------------------------------------------------------
13. # Python program to check

# if a string is palindrome 

# or not

 

x = "malayalam" 

 

w = "" 

for i in x: 

    w = i + w 

 

if (x == w): 

    print("Yes") 

else: 

    print("No") 


Or 

# function which return reverse of a string

 

def isPalindrome(s): 

    return s == s[::-1] 

 

 

# Driver code

s = "malayalam" 

ans = isPalindrome(s) 

 

if ans: 

    print("Yes") 

else: 

    print("No")

-----------------------------------------------
14. 

def pythagoras(opposite_side, adjacent_side,hypotenuse): 
    if opposite_side == str("x"): 
         return ("Opposite = " +  str(((hypo tenuse**2) - (adjacent_side**2))**0.5)) 
    elif adjacent_side == str("x"):
         return ("Adjacent = " + str(((hypo tenuse**2) - (opposite_side**2))**0.5)) 
    elif hypotenuse == str("x"):
          return ("Hypotenuse = " + str (((opposite_side**2) + (adjacent_side **2))**0.5)) 
else: return "You know the answer!"

 print(pythagoras(3,4,'x')) print(pythagoras(3,'x',5)) print(pythagoras('x',4,5)) print(pythagoras(3,4,5)) 



Sample Output:

Hypotenuse = 5.0 
Adjacent = 4.0 
Opposite = 3.0
 You know the answer! 
-‐--------------------------
15. TO KNOW FREQUENCY 

# Python3 code to demonstrate  

# each occurrence frequency using  

# naive method  

  

# initializing string  

test_str = "GeeksforGeeks" 

  

# using naive method to get count  

# of each element in string  

all_freq = {} 

  

for i in test_str: 

    if i in all_freq: 

        all_freq[i] += 1 

    else: 

        all_freq[i] = 1

# printing result  

print ("Count of all characters in GeeksforGeeks is :\n " 

        

